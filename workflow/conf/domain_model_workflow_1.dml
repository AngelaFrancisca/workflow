package module.workflow.domain;

/*
 * @(#)domain_model_workflow_1.dml
 *
 * Copyright 2009 Instituto Superior Tecnico
 * Founding Authors: Jo√£o Figueiredo, Luis Cruz, Paulo Abrantes, Susana Fernandes
 * 
 *      https://fenix-ashes.ist.utl.pt/
 * 
 *   This file is part of the MyOrg web application infrastructure.
 *
 *   MyOrg is free software: you can redistribute it and/or modify
 *   it under the terms of the GNU Lesser General Public License as published
 *   by the Free Software Foundation, either version 3 of the License, or
 *   (at your option) any later version.*
 *
 *   MyOrg is distributed in the hope that it will be useful,
 *   but WITHOUT ANY WARRANTY; without even the implied warranty of
 *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 *   GNU Lesser General Public License for more details.
 *
 *   You should have received a copy of the GNU Lesser General Public License
 *   along with MyOrg. If not, see <http://www.gnu.org/licenses/>.
 * 
 */


valueType myorg.domain.util.ByteArray as ByteArray {
    externalizeWith {
        bytearray getBytes();
    }
}

valueType pt.utl.ist.fenix.tools.util.Strings as Strings {
    externalizeWith {
        String exportAsString();
    }

    internalizeWith importFromString();
}

class WorkflowSystem {
}

class WorkflowProcess implements .myorg.domain.VirtualHostAware {
	String ojbConcreteClass;
	String processNumber;
}

class WorkflowLog implements .myorg.domain.VirtualHostAware {
	String ojbConcreteClass;
	DateTime whenOperationWasRan;
	Strings descriptionArguments;
}

	class ActivityLog extends WorkflowLog {
		String operation;
	}

	class LabelLog extends WorkflowLog {
		String label;
		String bundle;
	}

	class FileUploadLog extends WorkflowLog {
	}

	class FileRemoveLog extends WorkflowLog {
	}

class WorkflowProcessComment implements .myorg.domain.VirtualHostAware {
	String comment;
	DateTime date;
} 

class WorkflowQueue implements .myorg.domain.VirtualHostAware {
	String name;
	String ojbConcreteClass;
} 

	class WorkflowUserGroupQueue extends WorkflowQueue {
	}

class ProcessSelectionMapper implements .myorg.domain.VirtualHostAware {
	String classname;
}

class NodeMapping implements .myorg.domain.VirtualHostAware {
	int nodeOrder;
}

relation WorkflowflowSystemNodeMapping {
	WorkflowSystem playsRole workflowSystem;
	NodeMapping playsRole nodeMappings {
		multiplicity *;
	}
}

relation WorkflowflowSystemProcessSelectionMapper {
	WorkflowSystem playsRole workflowSystem;
	ProcessSelectionMapper playsRole processMappings {
		multiplicity *;
	}
}

relation MappedNodeProcessSelectionMapper {
	NodeMapping playsRole nodeMappings {
		multiplicity *;
	}
	ProcessSelectionMapper playsRole processMapping;
}

relation NodeMappingNode {
	NodeMapping playsRole NodeMapping {
		multiplicity *;
	}
	.myorg.domain.contents.Node playsRole node;
}

relation WorkflowflowSystemWorkflowProcess {
	WorkflowSystem playsRole workflowSystem;
	WorkflowProcess playsRole processes {
		multiplicity *;
	}
}

relation WorkflowflowSystemComment {
	WorkflowSystem playsRole workflowSystem;
	WorkflowProcessComment playsRole processComments {
		multiplicity *;
	}
}

relation WorkflowflowSystemWorkflowLog {
	WorkflowSystem playsRole workflowSystem;
	WorkflowLog playsRole processLogs {
		multiplicity *;
	}
}

relation WorkflowProcessActivityLog {
	WorkflowLog playsRole executionLogs {
		multiplicity *;
	}
	WorkflowProcess playsRole process;
}

relation WorkflowProcessWorkflowProcessComment {
	WorkflowProcessComment playsRole comments {
		multiplicity *;
	}	
	WorkflowProcess playsRole process;
}

relation WorkflowProcessesWorkflowQueues {
	WorkflowProcess playsRole processes {
		multiplicity *;
	}	
	WorkflowQueue playsRole currentQueues {
		multiplicity *;
	}
}

relation QueueHistory {
	WorkflowProcess playsRole processesHistory {
		multiplicity *;
	}	
	WorkflowQueue playsRole queueHistory {
		multiplicity *;
	}
}

relation WorkflowSystemWorkflowQueue {
	WorkflowSystem playsRole workflowSystem;
	WorkflowQueue playsRole workflowQueues {
		multiplicity *;
	}
}

relation VirtualHostWorkflowSystem {
	.myorg.domain.VirtualHost playsRole virtualHost {
		multiplicity *;
	}
	WorkflowSystem playsRole workflowSystem;
}
