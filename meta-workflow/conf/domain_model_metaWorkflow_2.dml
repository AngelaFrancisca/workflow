/*
 * @(#)domain_model_metaWorkflow_2.dml
 *
 * Copyright 2009 Instituto Superior Tecnico
 * Founding Authors: Jo√£o Figueiredo, Luis Cruz, Paulo Abrantes, Susana Fernandes
 * 
 *      https://fenix-ashes.ist.utl.pt/
 * 
 *   This file is part of the MyOrg web application infrastructure.
 *
 *   MyOrg is free software: you can redistribute it and/or modify
 *   it under the terms of the GNU Lesser General Public License as published
 *   by the Free Software Foundation, either version 3 of the License, or
 *   (at your option) any later version.*
 *
 *   MyOrg is distributed in the hope that it will be useful,
 *   but WITHOUT ANY WARRANTY; without even the implied warranty of
 *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 *   GNU Lesser General Public License for more details.
 *
 *   You should have received a copy of the GNU Lesser General Public License
 *   along with MyOrg. If not, see <http://www.gnu.org/licenses/>.
 * 
 */


class module.metaWorkflow.domain.WorkflowMetaProcess extends module.workflow.domain.WorkflowProcess {
	String instanceDescription;
	String subject;
	DateTime creationDate;
	Boolean open;
}

class module.metaWorkflow.domain.UserRequestor extends module.metaWorkflow.domain.Requestor {
}

relation WorkflowUnitQueueUnit {
	module.metaWorkflow.domain.WorkflowUnitQueue playsRole queues {
		multiplicity *;
	}
	module.organization.domain.Unit playsRole unit;
}

relation WorkflowUnitQueueAccountabilityType {
	module.metaWorkflow.domain.WorkflowUnitQueue playsRole usedQueues {
		multiplicity *;
	}
	module.organization.domain.AccountabilityType playsRole accountabilityTypes {
		multiplicity *;
	}
}

relation WorkflowQueueWorkflowMetaType {
	module.workflow.domain.WorkflowQueue playsRole queues {
		multiplicity *;
	}
	module.metaWorkflow.domain.WorkflowMetaType playsRole metaType;
}
 
relation WorkflowMetaTypeAccountabilityType {
	module.metaWorkflow.domain.WorkflowMetaType playsRole workflowMetaTypes {
		multiplicity *;
	}
	module.organization.domain.AccountabilityType playsRole supportedAccountabilityTypes {
		multiplicity *;
	}
}

relation RequestorWorkflowMetaProcess {
	module.metaWorkflow.domain.WorkflowMetaProcess playsRole process {
		multiplicity *;
	}
	module.metaWorkflow.domain.Requestor playsRole requestor;
}
 
relation UserRequestorUser {
	myorg.domain.User playsRole user;
	module.metaWorkflow.domain.Requestor playsRole requestor;
}

relation WorkflowMetaTypeOrganizationModel {
	module.metaWorkflow.domain.WorkflowMetaType playsRole metaType {
		multiplicity *;
	}
	module.organization.domain.OrganizationalModel playsRole organizationalModel;
}

relation WorkflowMetaProcessWorkflowMetaType {
	module.metaWorkflow.domain.WorkflowMetaProcess playsRole metaProcesses {
		multiplicity *;
	}
	module.metaWorkflow.domain.WorkflowMetaType playsRole metaType;
}

relation WorkflowMetaProcessFieldSetValue {
	module.metaWorkflow.domain.WorkflowMetaProcess playsRole process;
	module.metaWorkflow.domain.FieldSetValue playsRole fieldSet {
		multiplicity 1..1;
	}
}

relation WorkflowSystemWorkflowMetaType {
	module.workflow.domain.WorkflowSystem playsRole workflowSystem;
	module.metaWorkflow.domain.WorkflowMetaType playsRole metaTypes {
		multiplicity *;
	}
}

relation WorkflowSystemWorkflowMetaTypeDescription {
	module.workflow.domain.WorkflowSystem playsRole workflowSystem;
	module.metaWorkflow.domain.WorkflowMetaTypeDescription playsRole metaTypeDescriptions {
		multiplicity *;
	}
}

relation UserWorkflowMetaTypeDescription {
	myorg.domain.User playsRole versionOwner;
	module.metaWorkflow.domain.WorkflowMetaTypeDescription playsRole metaTypeDescriptions {
		multiplicity *;
	}
}

relation UserWorkflowMetaProcess {
	myorg.domain.User playsRole creator;
	module.metaWorkflow.domain.WorkflowMetaProcess playsRole metaProcesses {
		multiplicity *;
	}
}

relation MetaTypeObserver {

	myorg.domain.User playsRole metaTypeObservers {
		multiplicity *;
	}
	module.metaWorkflow.domain.WorkflowMetaType playsRole observedMetaTypes {
		multiplicity *;
	}
}
